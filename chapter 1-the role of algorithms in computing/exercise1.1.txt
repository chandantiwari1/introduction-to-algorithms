1.1-1   Give a real world example that requires sorting or a real-world example that requires computing a convex hull.

Solution: There are the many real life examples of the sorting. Examples could be of sorting Students according to their roll number or sorting the students accordingding 
to their marsk.

second example could be sorting the database accoring to the given prefereces.

third example : sorting profiles which are nearers to the office and many more.

1.1-2
other than speed, what other measures of efficiency might one use in a real world setting?

solution: other than speed the other measures are space and the netwroking and database storage. that should be taken care of.

1.1-3
select a data structure that you have seen previously and discuss its strengths and limitatios.

solution: Array is the data strucuture which is used to store elements of the same data types in contiguous memeory locations:
            
            Advantage: Array are efficent and fast for querying the entries it only take O(1) time complexity, Easy to iterate over the elements , and updating
            therir values .
            
            Disadvantage: Array are limited to thieir sizes so when we need an extra space we cannot grow the array size and even we cannot add and extra elementsto 
            to the array and next thing is array are hard to resize.
            doesnto strores the elements of the different data types.

1.1-4
how are the shortest path algorithms and travelling salesman problem given above similar? and how they are different?;

solution:
            Similarities:
                        Both the shortest path algorithm and the travelling sales man problem is to find the shortes distance betwenn two pointst through 
                        the graph traversal .
            Differences:
                       In the shortest path we only need to find the shortes path between two points while in the travelling sales man problem we need to calulate
                       the shortest path between a starting point and many other points.

1.1-5
Come up with a real world problem in which only the best solution will do. then come up wit hone in which a solutin that is "approximately" the best is good enough.

Solution : for the sorting algorithms there is no best approach the best approach is enought good.
you may consider the examples like inserting sort and the merge sort algorihms.

